<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BallBuddies.Presentation</name>
    </assembly>
    <members>
        <member name="M:BallBuddies.Presentation.Controllers.AttendanceController.GetEventAttendances(System.Guid)">
            <summary>
            Gets all the attendance for an event
            </summary>
            <param name="eventId"></param>
            <returns>New user registered</returns>
            <response code="200">Returns all the attendance for an event</response>
            <response code="401">Unauthorized access</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.AttendanceController.GetCurrentUserAttendances">
            <summary>
            Gets all events a user is attending
            </summary>
            <returns>New user registered</returns>
            <response code="200">Returns 200 status code response</response>
            <response code="401">Unauthorized access</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.AttendanceController.AddEventAttendance(BallBuddies.Models.Dtos.Request.AttendanceRequestDto)">
            <summary>
            Adds user attendance to an event
            </summary>
            <param name="attendanceRequestDto"></param>
            <returns>201 status code</returns>
            <response code="201">Returns 201 response</response>
            <response code="401">Unauthorized access</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.AttendanceController.RemoveEventAttendance(BallBuddies.Models.Dtos.Request.AttendanceRequestDto)">
            <summary>
            Removes user attendance from an event
            </summary>
            <param name="attendanceRequestDto"></param>
            <response code="200">Returns success</response>
            <response code="401">Unauthorized access</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.AuthenticationController.RegisterUser(BallBuddies.Models.Dtos.Request.UserRegistrationDto)">
            <summary>
            Registers a new user
            </summary>
            <param name="userRegistrationDto"></param>
            <returns>New user registered</returns>
            <response code="200">Returns access and refresh tokens</response>
            <response code="422">Returns password required </response>
            <response code="400">Returns duplicate username</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.AuthenticationController.AuthenticateUser(BallBuddies.Models.Dtos.Request.UserAuthenticationDto)">
            <summary>
            Logs in a user
            </summary>
            <param name="userAuthenticationDto"></param>
            <returns>A generated access token and refresh token</returns>
            <response code="200">Returns Login successful</response>
            <response code="401">Returns unauthorized access</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.CommentsController.GetAllEventComments(System.Guid)">
            <summary>
            Gets all comments for an event
            </summary>
            <returns>A list of event comments</returns>
            <response code="200">Returns a list of event comments</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.CommentsController.GetEventComment(System.Guid,System.Guid)">
            <summary>
            Gets single comment for an event
            </summary>
            <returns>A single event comment</returns>
            <response code="200">Returns a single event comment</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.CommentsController.CreateCommentForEvent(System.Guid,BallBuddies.Models.Dtos.Request.CommentRequestDto)">
            <summary>
            Create comment for an event
            </summary>
            <returns>A created comment</returns>
            <response code="200">Returns a created event comment</response>
            <response code="400">Returns comment request dto is null</response> 
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.CommentsController.DeleteCommentForEvent(System.Guid,System.Guid)">
            <summary>
            Delete comment for an event
            </summary>
            <returns>Returns no content</returns>
            <response code="200">Returns no content</response>
            <response code="500">Returns Event does not exist in the database</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.EventsController.GetEvents(BallBuddies.Models.RequestFeatures.EventParameters)">
            <summary>
            Gets a list of all events
            </summary>
            <returns>The event list</returns>
            <response code="200">Returns all the events in the database</response>
            <response code="401">Returns unauthorized access response</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.EventsController.GetEvent(System.Guid)">
            <summary>
            Gets an event by ID
            </summary>
            <param name="id"></param>
            <returns>A single event</returns>
            /// <response code="200">Returns a single event with the Id</response>
            <response code="401">Returns unauthorized access response</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.EventsController.CreateEvent(BallBuddies.Models.Dtos.Request.EventRequestDto)">
            <summary>
            Creates a new event
            </summary>
            <param name="eventRequestDto"></param>
            <returns>A newly created event</returns>
            <response code="201">Returns the newly created event</response>
            <response code="400">If the item is null</response>
            <response code="401">Returns unauthorized access response</response>
            <response code="422">If the model is invalid</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.EventsController.UpdateEvent(System.Guid,BallBuddies.Models.Dtos.Request.EventUpdateRequestDto)">
            <summary>
            Updates an event
            </summary>
            <param name="id"></param>
            <param name="eventUpdateRequestDto"></param>
            <returns>No content</returns>
            <response code="404">Returns NotFound error</response>
            <response code="401">Returns unauthorized access response</response>
            <response code="200">Returns success message</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.EventsController.DeleteEvent(System.Guid)">
            <summary>
            Deletes an event
            </summary>
            <param name="id"></param>
            <returns>No content</returns>
            <response code="404">Returns NotFound error</response>
            <response code="401">Returns unauthorized access response</response>
            <response code="200">Returns success response</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.TokenController.Refresh(BallBuddies.Models.Dtos.Response.TokenDto)">
            <summary>
            Validates access token and refresh token
            </summary>
            <returns>The access token and refresh token</returns>
            <response code="200">Returns the access token and refresh token</response>
            <response code="500">Returns invalid client request</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.UsersController.GetUsers">
            <summary>
            Gets a list of all users
            </summary>
            <returns>The user list</returns>
            <response code="200">Returns all the users in the database</response>
            <response code="401">Returns unauthorized access response</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.UsersController.GetUser(System.String)">
            <summary>
            Gets a user by Id
            </summary>
            <returns>A single user</returns>
            <response code="200">Returns a single user from the database</response>
            <response code="401">Returns unauthorized access response</response>
        </member>
        <member name="M:BallBuddies.Presentation.Controllers.UsersController.UpdateUserRoles(System.String,BallBuddies.Models.Dtos.Request.UserRolesDto)">
            <summary>
            Updates a user's roles
            </summary>
            <returns>Updates a single user's roles</returns>
            <response code="200">Updates a single user's role in the database</response>
            <response code="401">Returns unauthorized access response</response>
        </member>
    </members>
</doc>
